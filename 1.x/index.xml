<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ce-provision</title>
    <link>https://codeenigma.github.io/ce-provision-docs/1.x/</link>
    <description>Recent content on ce-provision</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://codeenigma.github.io/ce-provision-docs/1.x/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/_sidebar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/_sidebar/</guid>
      <description>Home   Install   Usage   Roles   Ansible   APACHE   Extra packages   AWS Cloudwatch agent   AWS Infrastructure   AWS Certificate Manager   AWS AMI   AWS Backup   AWS CLI   AWS CloudFront distribution   Cloudwatch log group   Amazon credentials   Autoscale cluster   EC2 CloudWatch Metric Alarm   EC2 instance with EIP   EFS client   AWS EFS   AWS IAM EC2   AWS IAM SAML   AWS key pair.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/contribute/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/contribute/</guid>
      <description>Contribute Documentation </description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/install/</guid>
      <description>Install You can install either:
 through ce-provision  manually by running a local playbook with Docker (soon)  Install manually Dependencies The stack has been created on Debian Buster. It might run on other Debian versions or derivatives, but this is untested. The main prerequesites are obviously Ansible and git. Depending on how you setup your inventory, you might need some other Python libraries (eg Boto3 for AWS). You will also need a local user to install locally, by convention we&amp;rsquo;ll name it &amp;ldquo;provision&amp;rdquo;, but you can easily override that.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/</guid>
      <description>Roles Ansible roles and group of roles that constitute the deploy stack.
Required variables You must pass the following variables into an Ansible play before running it with ce-provision:
 _aws_profile - the Boto3 profile to use _aws_region - the AWS region to act in  </description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/_init/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/_init/</guid>
      <description>Init role This is meant to ALWAYS be included as the first task of a play.
Default variables --- _init: # A list of var directories to include. We only support .yml extensions. # This is used to detect if the playbook must re-run or not. vars_dirs: [] force_play: false # ce_provision vars are sometimes needed even when the role isn&amp;#39;t used so we define them here. # If you are using ce_provision and *not* using _init you can copy these vars to your playbook.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/_meta/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/_meta/</guid>
      <description>&amp;ldquo;Meta&amp;rdquo; roles that group individual roles together. </description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/_meta/aws_account/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/_meta/aws_account/</guid>
      <description>AWS account Configure an AWS account globally.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/_meta/aws_client_instance/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/_meta/aws_client_instance/</guid>
      <description>AWS client Installs AWS tools (Cloudwatch, SSM, &amp;hellip;) on servers. Servers can theoretically be anywhere, they do not have to be AWS EC2 instances.
The server will need some IAM permissions, either through:
 an IAM role (see aws/aws_iam_role), the standard for EC2 instances. an IAM user (see aws/aws_credentials), for non-AWS servers.  </description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/_meta/aws_region/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/_meta/aws_region/</guid>
      <description>AWS region Configure an AWS region globally.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/_overrides/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/_overrides/</guid>
      <description>_overrides. Allow some files and symlinks to be created or replaced on the target server. Usually not called by itself, but triggered by other roles relying on it.
Default variables --- _overrides: # A list of files to override. files: [] # files: # - src: &amp;#34;php/php.ini&amp;#34; # This is relative to the &amp;#34;extra&amp;#34; config, or to the playbook. # dest: &amp;#34;/etc/php7.4/fpm/php.ini&amp;#34; # mode: &amp;#34;0755&amp;#34; # owner: &amp;#34;root&amp;#34; # group: &amp;#34;root&amp;#34; links: [] # links: # - src: &amp;#34;/mnt/assets&amp;#34; # This is absolute, on the target.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/ansible/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/ansible/</guid>
      <description>Ansible (Re-)install Ansible from the official repository</description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/apache/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/apache/</guid>
      <description>APACHE Install and configure the apache webserver.
Default variables --- php: version: - 7.2 symfony_env: &amp;#34;{{ _env_type }}&amp;#34; apache: # Global default config for apache2.conf. user: www-data mods_enabled: - rewrite - ssl - proxy - proxy_fcgi - fcgid http: server_names_hash_bucket_size: 256 access_log: /var/log/apache2-access.log error_log: /var/log/apache2-error.log error_log_level: &amp;#34;notice&amp;#34; # Group prefix. Useful for grouping by environments. log_group_prefix: &amp;#34;&amp;#34; # Main log stream for apache (Cloudwatch). log_stream_name: example # We can only have one backend, due to the way we use &amp;#34;common&amp;#34; templates.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/apt_extra_packages/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/apt_extra_packages/</guid>
      <description>Extra packages Provides a wrapper for installing packages through apt.
Default variables --- apt_extra_packages: [] </description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/aws/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/aws/</guid>
      <description>AWS Infrastructure </description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/aws/aws_acm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/aws/aws_acm/</guid>
      <description>AWS Certificate Manager Fork from https://github.com/FairwindsOps/ansible-acm
Creates AWS certificate requests. Allows for passing a validation domain. From the AWS documentation :
 To ensure that email is sent to the administrative addresses for an apex domain, such as example.com, rather than to the administrative addresses for a subdomain, such as test.example.com, specify the ValidationDomain option in the RequestCertificate API or the request-certificate AWS CLI command. This feature is not currently supported in the console.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/aws/aws_ami/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/aws/aws_ami/</guid>
      <description>AWS AMI Creates an image from a selected base with Packer, provisioned with an Ansible Playbook.
Dependencies This requires boto and Packer on the &amp;ldquo;provisioning&amp;rdquo; server.
If using the &amp;lsquo;repack&amp;rsquo; operation, so your new AMI gets created from a temporary EC2 instance instead built by Packer, your playbook hosts line will need to look like this:
- hosts: &amp;#34;{{ _aws_ami_host | default(&amp;#39;default&amp;#39;) }}&amp;#34; become: true Like that it will use _aws_ami_host if available and default to default if not, which is the value expected by Packer for the &amp;lsquo;create&amp;rsquo; operation.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/aws/aws_backup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/aws/aws_backup/</guid>
      <description>AWS Backup Creates AWS Backup vaults and plans. Resources are assigned to these plans, if the variable is set, in the other roles, such as aws/aws_efs and aws/aws_rds.
Default variables --- aws_backup: vault: name: &amp;#34;Default&amp;#34; # Set the vault name; if anything but &amp;#39;default&amp;#39;, a vault will be created with the name specified and the encryption key below. encryption_key: &amp;#34;Default&amp;#34; # An Amazon Resource Name (ARN) that identifies the encryption key to use in the copy region.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/aws/aws_cli/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/aws/aws_cli/</guid>
      <description>AWS CLI Installs the AWS client for Linux.
Default variables --- aws_cli: refresh: false # Set to true to upgrade the AWS client </description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/aws/aws_cloudfront_distribution/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/aws/aws_cloudfront_distribution/</guid>
      <description>AWS CloudFront distribution Creates a new AWS CloudFront distribution (CDN) for content delivery.
Default variables --- aws_cloudfront_distribution: aws_profile: &amp;#34;{{ _aws_profile }}&amp;#34; region: &amp;#34;{{ _aws_region }}&amp;#34; tags: {} state: present aliases: # A list of aliases to serve on. - &amp;#34;{{ _domain_name }}&amp;#34; validate_certs: false viewer_certificate: cloudfront_default_certificate: false acm_certificate_arn: &amp;#34;&amp;#34; # The certificate must be in us-east-1 for CloudFront. ssl_support_method: &amp;#34;sni-only&amp;#34; # Do not include if cloudfront_default_certificate is true. #minumum_protocol_version: &amp;#34;TLSv1.2_2019&amp;#34; # If not supplied the AWS default is TLSv1.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/aws/aws_cloudwatch_log_group/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/aws/aws_cloudwatch_log_group/</guid>
      <description>Cloudwatch log group Manage log groups states and retention policies.
Default variables --- aws_cloudwatch_log_group: aws_profile: &amp;#34;{{ _aws_profile }}&amp;#34; region: &amp;#34;{{ _aws_region }}&amp;#34; tags: {} state: present # Number of days to keep logs, in days. # Valid values are: [1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653] retention: 365 # Group names to apply the policy to. log_group_names: - &amp;#34;syslog&amp;#34; - &amp;#34;auth&amp;#34; </description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/aws/aws_credentials/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/aws/aws_credentials/</guid>
      <description>Amazon credentials Simple role generating credentials &amp;ldquo;profiles&amp;rdquo; in users $HOME/.aws/credentials.
Default variables --- aws_credentials: - user: ce-dev profiles: - name: profile1 access_key_id: XXX secret_access_key: XXXX - name: example access_key_id: XXX secret_access_key: XXXX - user: root profiles: - name: another access_key_id: XXX secret_access_key: XXXX - name: profile2 access_key_id: XXX secret_access_key: XXXX </description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/aws/aws_ec2_autoscale_cluster/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/aws/aws_ec2_autoscale_cluster/</guid>
      <description>Autoscale cluster Default variables aws_ec2_autoscale_cluster: aws_profile: &amp;#34;{{ _aws_profile }}&amp;#34; region: &amp;#34;{{ _aws_region }}&amp;#34; name: &amp;#34;example&amp;#34; state: present acm: create_cert: false extra_domains: [] # list of Subject Alternative Name domains and zones # - domain: www2.example.com # zone: example.com # aws_profile: us-east-1 route_53: aws_profile: another # the zone might not be in the same account as the certificate zone: example.com vpc_id: vpc-XXXX # One of vpc_id or vpc_name is mandatory. # vpc_name: example-vpc subnets: # - az: a # cidr: &amp;#34;10.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/aws/aws_ec2_metric_alarm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/aws/aws_ec2_metric_alarm/</guid>
      <description>EC2 CloudWatch Metric Alarm Creates an EC2 alarm for CloudWatch. You can use this role to set any alarm, the EC2 AutoScale role uses it to set autoscaling alarms for autoscaling policies if you need an example.
Default variables --- aws_ec2_metric_alarm: aws_profile: &amp;#34;{{ _aws_profile }}&amp;#34; region: &amp;#34;{{ _aws_region }}&amp;#34; state: present name: &amp;#34;&amp;#34; description: &amp;#34;Created by Ansible.&amp;#34; metric: &amp;#34;&amp;#34; namespace: &amp;#34;&amp;#34; # The CloudWatch namespace (category) the alarm will appear in.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/aws/aws_ec2_with_eip/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/aws/aws_ec2_with_eip/</guid>
      <description>EC2 instance with EIP Creates a new EC2 instance at AWS with a static IP address.
Default variables --- aws_ec2_with_eip: aws_profile: &amp;#34;{{ _aws_profile }}&amp;#34; region: &amp;#34;{{ _aws_region }}&amp;#34; instance_type: t3.micro key_name: &amp;#34;{{ ce_provision.username }}@{{ ansible_hostname }}&amp;#34; # This needs to match your &amp;#34;provision&amp;#34; user SSH key. ami_name: &amp;#34;{{ _domain_name }}&amp;#34; # The name of an AMI image to use. Image must exists in the same region. ami_owner: self # Default to self-created image.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/aws/aws_efs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/aws/aws_efs/</guid>
      <description>AWS EFS Creates or update an EFS volume.
Default variables aws_efs: aws_profile: &amp;#34;{{ _aws_profile }}&amp;#34; region: &amp;#34;{{ _aws_region }}&amp;#34; name: example # If false, we omit tags enterly and leave them as is. purge_tags: false tags: {} state: present wait: true # Subnets names. subnets: [] # SG names. Note, the assumption is that all subnets have the same SGs. security_groups: [] # Whether to encrypt the volume or not. encrypt: false backup: &amp;#34;{{ _infra_name }}-{{ _env_type }}&amp;#34; # Name of the AWS Backup plan to use to backup the instance.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/aws/aws_efs_client/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/aws/aws_efs_client/</guid>
      <description>EFS client Mounts EFS volume(s) to specific mount point(s). It uses the &amp;ldquo;Name&amp;rdquo; tag for a given volume to retrieve the volume path.
Default variables --- aws_efs_client: aws_profile: &amp;#34;{{ _aws_profile }}&amp;#34; region: &amp;#34;{{ _aws_region }}&amp;#34; version: 1.26.2 # Version of AWS EFS utils to use. # See https://docs.ansible.com/ansible/latest/modules/mount_module.html mounts: - path: /mnt/shared src: example-efs # This will be translated from the &amp;#34;name&amp;#34; opts: _netdev # _netdev tells OS to wait for network before attempting to mount state: present owner: root group: root </description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/aws/aws_iam_role/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/aws/aws_iam_role/</guid>
      <description>AWS IAM EC2 Set up an IAM role, with basic document/trust policy.
Default variables aws_iam_role: name: &amp;#34;example&amp;#34; aws_profile: &amp;#34;{{ _aws_profile }}&amp;#34; # Pass either names or ARNs for the role. managed_policies: [] # Which document policy to apply. # Current options are &amp;#39;ec2&amp;#39;, &amp;#39;ecs&amp;#39; or &amp;#39;backup&amp;#39; policy_document: ec2 purge_policies: true # set to false if you want to add policies to an existing role tags: #Type: &amp;#34;util&amp;#34; state: present _result: {} </description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/aws/aws_iam_saml/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/aws/aws_iam_saml/</guid>
      <description>AWS IAM SAML Creates the necessary policies and roles for SAML-based SSO in AWS and optionally creates Service Provider (SP) includes for SimpleSAMLphp .
All tasks in this role are optional and can be skipped by simply not presenting a variable.
Variables are generic for AWS SAML configuration up until the saml_metadata_document variable. Groups are intended to be LDAP groups, but in reality they can be any array of values you wish to pass to AWS to match against the eduPersonAffiliation SAML attribute on login.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/aws/aws_provision_ec2_keypair/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/aws/aws_provision_ec2_keypair/</guid>
      <description>AWS key pair. Creates a key pair for the current &amp;ldquo;provision user&amp;rdquo;
Default variables --- aws_provision_ec2_keypair: aws_profile: &amp;#34;{{ _aws_profile }}&amp;#34; region: &amp;#34;{{ _aws_region }}&amp;#34; key_name: &amp;#34;{{ ce_provision.username }}@{{ ansible_hostname }}&amp;#34; </description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/aws/aws_rds/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/aws/aws_rds/</guid>
      <description>AWS RDS Creates an RDS instance and associated ressources.
If the engine variable is set to aurora-mysql, you&amp;rsquo;ll need to manually create the Aurora cluster first. Typically, a controller will already exist, so something like this can be run from the controller:
AWS_PROFILE=example aws rds create-db-cluster --db-cluster-identifier example-aurora-cluster --engine aurora-mysql --engine-version 5.7.mysql_aurora.2.10.2 --db-subnet-group-name example-aurora --vpc-security-group-ids sg-abcdefghijklmnop --storage-encrypted --master-username &amp;quot;auroradev&amp;quot; --master-user-password &amp;quot;aurora12345&amp;quot; You&amp;rsquo;ll need to have created the subnet group first as well as the security groups.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/aws/aws_s3_bucket/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/aws/aws_s3_bucket/</guid>
      <description>AWS S3 Bucket Creates an S3 bucket and a matching policy.
Default variables aws_s3_bucket: aws_profile: &amp;#34;{{ _aws_profile }}&amp;#34; region: &amp;#34;{{ _aws_region }}&amp;#34; name: &amp;#34;example&amp;#34; tags: Name: &amp;#34;example&amp;#34; state: &amp;#34;present&amp;#34; _result: {} </description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/aws/aws_sns/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/aws/aws_sns/</guid>
      <description>AWS SNS Creates an SNS topic and subscription.
Default variables --- aws_sns: name: &amp;#34;alarms&amp;#34; # Name of the topic. region: &amp;#34;{{ _aws_region }}&amp;#34; # The region to create the SNS topic. display_name: &amp;#34;&amp;#34; # Display name for the topic, for when the topic is owned by this AWS account. purge_subscriptions: true # Purge subscriptions not specified in the subscriptions list. policy: &amp;#34;&amp;#34; # A dictionary containing the policy to use when creating the topic delivery_policy_default_healthy_retry_policy_min_delay_target: 20 delivery_policy_default_healthy_retry_policy_max_delay_target: 20 delivery_policy_default_healthy_retry_policy_num_retries: 3 delivery_policy_default_healthy_retry_policy_num_max_delay_retries: 0 delivery_policy_default_healthy_retry_policy_num_no_delay_retries: 0 delivery_policy_default_healthy_retry_policy_num_min_delay_retries: 0 delivery_policy_default_healthy_retry_policy_backoff_function: &amp;#34;linear&amp;#34; delivery_policy_disable_subscription_overrides: false subscriptions: [] # A list of subscriptions.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/aws/aws_vpc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/aws/aws_vpc/</guid>
      <description>VPC Creates a VPC and associated subnets.
Default variables aws_vpc: aws_profile: &amp;#34;{{ _aws_profile }}&amp;#34; region: &amp;#34;{{ _aws_region }}&amp;#34; name: example-vpc-2 cidr_block: &amp;#34;10.0.0.0/16&amp;#34; tags: {} #Type: &amp;#34;util&amp;#34; state: present assign_instances_ipv6: false security_groups: [] # - name: web - open # description: Allow all incoming traffic on ports 80 and 443 # rules: # - proto: tcp # ports: # - 80 # - 443 # cidr_ip: 0.0.0.0/0 # rule_desc: Allow all incoming traffic on ports 80 and 443 </description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/aws/aws_vpc_route/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/aws/aws_vpc_route/</guid>
      <description>Update main route for a given VPC This will add/update routes on the &amp;ldquo;main&amp;rdquo; route table for a given VPC, leaving existing routes for different CIDR blocks intact.
Default variables # @todo Support associating route with several subnets. aws_vpc_route: aws_profile: &amp;#34;{{ _aws_profile }}&amp;#34; region: &amp;#34;{{ _aws_region }}&amp;#34; # Beware when calling this on &amp;#34;peering&amp;#34; routes, not to override tags with the target peer&amp;#39;s one. # tags: # Name: &amp;#34;example&amp;#34; vpc_id: vpc-XXX # subnet_id: subnet-XXX # Optional.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/aws/aws_vpc_subnet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/aws/aws_vpc_subnet/</guid>
      <description>VPC Creates a VPC and associated subnets.
Default variables aws_vpc_subnet: vpc_id: vpc-XXXX # One of vpc_id or vpc_name is mandatory. # vpc_name: example-vpc aws_profile: &amp;#34;{{ _aws_profile }}&amp;#34; region: &amp;#34;{{ _aws_region }}&amp;#34; subnets: - cidr_block: &amp;#34;10.0.0.0/24&amp;#34; az: b assign_instances_ipv6: false # A NAT gateway to associate with the subnets. # @todo IPV6 nat_ipv4: false name: example. # Wether to create a dedicated security group allowing internal traffic. security_group: false tags: {} #Type: &amp;#34;util&amp;#34; state: present </description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/aws_cloudwatch_agent/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/aws_cloudwatch_agent/</guid>
      <description>AWS Cloudwatch agent Install and configure the cloudwatch agent. Note that retention policies can not be set here, you will have to use the community.aws.cloudwatchlogs_log_group module in your playbooks.
Default variables --- aws_cloudwatch_agent: # Stream name. log_stream_name: &amp;#34;example&amp;#34; # Namespace for metrics. Leave empty to use the default CWAgent. metrics_namespace: &amp;#34;example&amp;#34; # Group prefix. Useful for grouping by environments. # Eg. instead of &amp;#34;syslog&amp;#34;, you can have &amp;#34;dev syslog&amp;#34;, &amp;#34;prod syslog&amp;#34;, etc.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/aws_ssm_agent/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/aws_ssm_agent/</guid>
      <description>AWS SSM agent Install and configure the SSM agent.
Default variables --- aws_ssm_agent: region: &amp;#34;{{ _aws_region }}&amp;#34; </description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/ce_deploy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/ce_deploy/</guid>
      <description>ce-deploy Installs Code Enigma&amp;rsquo;s deploy stack on a server.
Default variables --- _ce_deploy: username: &amp;#34;{% if is_local is defined and is_local %}ce-dev{% else %}deploy{% endif %}&amp;#34; ce_deploy: new_user: true # set to false if user already exists or is ephemeral, e.g. an LDAP user key_name: id_rsa.pub # existing users may have a key of a different name username: &amp;#34;{{ _ce_deploy.username }}&amp;#34; own_repository: &amp;#34;https://github.com/codeenigma/ce-deploy.git&amp;#34; own_repository_branch: &amp;#34;master&amp;#34; config_repository: &amp;#34;&amp;#34; config_repository_branch: &amp;#34;master&amp;#34; local_dir: &amp;#34;/home/{{ _ce_deploy.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/ce_dev/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/ce_dev/</guid>
      <description>Extra packages Provides a wrapper for installing packages through apt.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/ce_patcher/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/ce_patcher/</guid>
      <description>Automated patching Runs automated patching for apt-based package management systems.
Default variables --- ce_patcher: username: controller reboot: false </description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/ce_provision/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/ce_provision/</guid>
      <description>ce-provision Installs Code Enigma&amp;rsquo;s infrastructure management stack on a server.
Default variables --- # See roles/_init/defaults/main.yml for variables # All ce_provision variables should be set in _init </description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/firewall_config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/firewall_config/</guid>
      <description>Firewall Config This role provides a wrapper for Jeff Geerling&amp;rsquo;s Ansible firewall role for iptables .
Note, it explicitly does not state that dependency in meta because in some cases iptables needs installing from buster-backports and that cannot work if Ansible tries to install it as a dependency. This is why the first task in this role is installing iptables from buster-backports if the is_local variable is set (e.g we are in a ce-dev container).</description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/frontail/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/frontail/</guid>
      <description>Frontail Installs https://github.com/mthenw/frontail globally. This is used for local dev environments.
Default variables --- frontail: error_log: &amp;#34;/var/log/nginx-error.log&amp;#34; access_log: &amp;#34;/var/log/nginx-access.log&amp;#34; </description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/gitlab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/gitlab/</guid>
      <description>Gitlab Configuration Because of the size of the gitlab.rb file, it is impractical to try to parameterized it. Only a few basic variables are thus provided. To further customize it, the recommended approach is to leverage the &amp;ldquo;override&amp;rdquo; system and provide a custom template.
Default variables --- # See https://github.com/ansible/ansible/issues/8603 ldap_client: endpoints: [&amp;#34;&amp;#34;] lookup_base: &amp;#34;&amp;#34; binddn: &amp;#34;&amp;#34; bindpw: &amp;#34;&amp;#34; gitlab: server_name: &amp;#34;gitlab.{{ _domain_name }}&amp;#34; letsencrypt: &amp;#34;true&amp;#34; # use built-in GitLab LetsEncrypt support by default ssl: # @see the &amp;#39;ssl&amp;#39; role.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/gitlab_runner/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/gitlab_runner/</guid>
      <description>Gitlab Runner Install the Gitlab Runner binary from .deb package.
The role installs the gitlab-runner package on the target server and installs a default built in shell runner, though you will need to create the registration token for the runner and add it to your variables. You can define one or more runners as a list of dicts as shown below. You can also set gitlab_runner.runners to an empty list if you do not want to override the default config shipped with the Debian package.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/gpg_key/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/gpg_key/</guid>
      <description>GPG Key Generates a passwordless GPG key for a given user or users.
Default variables --- gpg_key_servers: - hkps://pgp.mit.edu - hkps://keys.openpgp.org gpg_key: - username: example # Must exist already on the server. publish: false # Whether to publish to HKS public servers. key_type: &amp;#34;RSA&amp;#34; key_length: 4096 email: example@example.com expire: 0 </description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/haproxy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/haproxy/</guid>
      <description>HA Proxy Default variables --- _haproxy: ssl_handling: ssl_selfsigned haproxy: template: &amp;#34;haproxy-ssl-passthru&amp;#34; ssl_handling: &amp;#34;{{ _haproxy.ssl_handling }}&amp;#34; listen_bind_address: &amp;#34;0.0.0.0&amp;#34; listen_https: true listen_http: false default_backend: default backends: - name: default ip: 127.0.0.1 port: 8080 domain: &amp;#34;{{ _domain_name }}&amp;#34; </description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/hosts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/hosts/</guid>
      <description>Managed /etc/hosts Forked from https://github.com/bertvv/ansible-role-hosts
Default variables --- hosts_playbook_version: &amp;#34;1.0.1&amp;#34; # If set to true, an entry for `ansible_hostname`, bound to the host&amp;#39;s default IPv4 address is added added. hosts_add_default_ipv4: true # If set to true, basic IPv6 entries (localhost6, ip6-localnet, etc) are added. hosts_add_basic_ipv6: true # If set to true, an entry for every host managed by Ansible is added. Remark that this makes `hosts_add_default_ipv4` unnecessary, as it will be added as wel by this setting.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/jenkins/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/jenkins/</guid>
      <description>Jenkins Default variables --- ldap_client: endpoints: [&amp;#34;&amp;#34;] lookup_base: &amp;#34;&amp;#34; lookup_user: &amp;#34;&amp;#34; binddn: &amp;#34;&amp;#34; bindpw: &amp;#34;&amp;#34; jenkins: server_name: &amp;#34;jenkins.{{ _domain_name }}&amp;#34; ssl_handling: &amp;#34;ssl_selfsigned&amp;#34; listen_http_port: -1 listen_https_port: 8884 listen_bind_address: &amp;#34;0.0.0.0&amp;#34; keystore_pass: &amp;#34;cleartext&amp;#34; user: &amp;#34;jenkins&amp;#34; adminuser: &amp;#34;admin&amp;#34; adminpass: &amp;#34;{{ lookup(&amp;#39;password&amp;#39;, _ce_provision_data_dir + &amp;#39;/&amp;#39; + inventory_hostname + &amp;#39;/jenkins-adminpass&amp;#39;) }}&amp;#34; # security: basic | ldap security: &amp;#34;basic&amp;#34; plugins: - ldap - mattermost ldap_endpoint: &amp;#34;{{ ldap_client.endpoints[0] }}&amp;#34; ldap_lookup_base: &amp;#34;{{ ldap_client.lookup_base }}&amp;#34; ldap_lookup_user: &amp;#34;{{ ldap_client.lookup_user }}&amp;#34; ldap_binddn: &amp;#34;{{ ldap_client.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/jitsi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/jitsi/</guid>
      <description>Jitsi Installs the Jitsi Meet video conferencing product. See https://jitsi.github.io/handbook/docs/devops-guide/devops-guide-quickstart
Default variables --- jitsi: server_name: &amp;#34;{{ _domain_name }}&amp;#34; email: admin@example.com </description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/ldap_server/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/ldap_server/</guid>
      <description>LDAP Server Install slapd and dependencies to run an LDAP directory server.
Configuration By default the role simply installs slapd and nothing else. However, you can import configuration from an LDIF file using slapadd. To create a config file from another LDAP server use this command:
 slapcat -n 0 &amp;gt; /path/to/my/backup.ldif  Place this file in the directory referenced in the ldap_server.config.path variable and set ldap_server.config.import to true and Ansible will attempt to import your config.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/lhci/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/lhci/</guid>
      <description>LHCI Installs the LHCI CLI for automated accessibility and performance testing. See https://github.com/GoogleChrome/lighthouse-ci/blob/main/docs/getting-started.md
The role installs Xvfb for &amp;lsquo;headful&amp;rsquo; running of Google Chome. This is preconfigured to run in the background with a display ID of 99, so you should run this command before running any lhci tests to ensure Chrome has an X session to run in:
export DISPLAY=:99 Here is an example lighthouserc.yml file for running lhci in a local ce-dev container on a project called &amp;lsquo;example&amp;rsquo;:</description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/mount_sync/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/mount_sync/</guid>
      <description>Mount sync Syncronize some &amp;ldquo;mounted&amp;rdquo; filesystems with the local one. Typically used for EFS/NFS mounts on autoscale clusters. It will:
 perform an initial rsync using a cloud-init script use Unison to perform regular checks (mostly to catch edge-cases where an instance would be spinned up during the middle of a deployment)   Default variables --- mount_sync: # A list of target/destination definitions. sync_pairs: - src: /my/path/to/sync dest: /another/path/to/sync minute: &amp;#34;*/10&amp;#34; name: example owner: root group: root deploy_dir: &amp;#34;/home/{{ user_deploy.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/mysql_client/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/mysql_client/</guid>
      <description>MariaDB Client Default variables --- # @todo do we want to support percona client ? mysql_client: client: &amp;#34;mysql-client&amp;#34; host: &amp;#34;rds.example.com&amp;#34; user: &amp;#34;user&amp;#34; password: &amp;#34;password&amp;#34; creds_file_dest: &amp;#34;/home/{{ user_deploy.username }}/.mysql.creds&amp;#34; creds_file_owner: &amp;#34;{{ user_deploy.username }}&amp;#34; creds_file_group: &amp;#34;{{ user_deploy.username }}&amp;#34; </description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/nginx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/nginx/</guid>
      <description>NGINX Install and configure the nginx webserver.
Default variables --- php: version: - 7.3 symfony_env: &amp;#34;{{ _env_type }}&amp;#34; nginx: # Global default config for nginx.conf. user: www-data worker_processes: auto events: worker_connections: 768 http: server_names_hash_bucket_size: 256 access_log: /var/log/nginx-access.log error_log: /var/log/nginx-error.log # Group prefix. Useful for grouping by environments. log_group_prefix: &amp;#34;&amp;#34; # Main log stream for nginx (Cloudwatch). log_stream_name: example # We can only have one backend, due to the way we use &amp;#34;common&amp;#34; templates.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/nodejs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/nodejs/</guid>
      <description>NodeJS Installs NodeJS from official repos.
Default variables --- nodejs: version: 12.x </description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/opcache/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/opcache/</guid>
      <description>opcache Installs and configures gordalina&amp;rsquo;s cache tool: https://github.com/gordalina/cachetool
Default variables --- # defaults file for opcache opcache: cachetool_version: latest # enter three-digit version number, e.g. &amp;#34;7.0.0&amp;#34;, to install a specific version host: &amp;#34;&amp;#34; port: &amp;#34;&amp;#34; </description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/openvpn_config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/openvpn_config/</guid>
      <description>OpenVPN Config This role is used to install an OpenVPN server with an Ansible Galaxy role and corresponding configuration afterwards. The Galaxy role is here:
 https://galaxy.ansible.com/robertdebock/openvpn  Default variables --- openvpn_config: install: true # set to false if we do not want to overwrite the existing VPN certs # Defaults from https://github.com/robertdebock/ansible-role-openvpn/blob/master/vars/main.yml configuration_directory: /etc/openvpn easyrsa_path: /usr/share/easy-rsa service: &amp;#34;openvpn@server&amp;#34; server_ip_range: &amp;#34;server 10.8.0.0 255.255.255.0&amp;#34; # Additional options force_redirect_gateway: true compress: true no_client_cert: true custom_directives: [] # optional list of directives, i.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/ossec/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/ossec/</guid>
      <description>OSSEC The ossec role is used to install ossec server or client.
Default variables --- # defaults file for ossec ossec: client: true serverip: &amp;#34;123.123.123.123&amp;#34; #auth_password should be 32 chars, lowercase letters and numbers, no symbols auth_password: &amp;#34;xxx&amp;#34; global: email_notification: &amp;#34;yes&amp;#34; email_to: &amp;#34;admin@example.com&amp;#34; smtp_server: &amp;#34;mail.google.com&amp;#34; email_from: &amp;#34;admin@example.com&amp;#34; white_list: - &amp;#34;8.8.8.8&amp;#34; - &amp;#34;4.4.4.4&amp;#34; alerts: log_alert_level: 1 email_alert_level: 7 email_alerts: email_to: &amp;#34;admin@example.com&amp;#34; level: 14 ssl: domain: &amp;#34;ossec.example.com&amp;#34; handling: &amp;#34;selfsigned&amp;#34; syscheck: frequency: 79200 directories: - /etc - /usr/bin - /usr/sbin - /bin - /sbin ignore: - /etc/mtab - /etc/mnttab - /etc/hosts.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/php_composer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/php_composer/</guid>
      <description>PHP Composer This role is used to install the Composer package manager for PHP. It wraps the Galaxy role from Jeff Geerling which can be found here:
 https://github.com/geerlingguy/ansible-role-composer  Default variables php_composer: # Abstractions of default variables which can be found here: # https://github.com/geerlingguy/ansible-role-composer/blob/master/defaults/main.yml version: &amp;#39;1.8.4&amp;#39; # Buster apt package is &amp;#39;Composer 1.8.4 2019-02-11 10:52:10&amp;#39; keep_updated: false version_branch: &amp;#39;&amp;#39; github_oauth_token: &amp;#39;&amp;#39; </description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/php_xdebug/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/php_xdebug/</guid>
      <description>PHP XDebug Installs and configure XDebug extension for PHP
Default variables --- xdebug: cli: false fpm: false scream: 0 max_nesting_level: 1024 mode: &amp;#34;debug&amp;#34; start_with_request: &amp;#34;trigger&amp;#34; output_dir: &amp;#34;/var/log/php/xdebug&amp;#34; remote_port: &amp;#34;9003&amp;#34; # The &amp;#34;auto&amp;#34; behaviour tries to guess the best setting for when in use with ce-dev. # You can of course set it explicitely to the relevant value for your use case. remote_host: auto # Default to docker.for.mac.localhost when used in ce-dev on a Mac OS host, and to 127.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/postfix/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/postfix/</guid>
      <description>Postfix Installs and configures Postfix for sending mail. Mail sending is disabled by default.
Default variables --- postfix: hostname: &amp;#34;{{ ansible_fqdn }}&amp;#34; # if you set this to something else you may have to create PTR records to avoid bouncing dest_hosts: &amp;#34;mail.host1.com,mail.host2.com&amp;#34; disable_vrfy: false interfaces: all # ce_dev_delivery_mode is only used when is_local == true, which means you&amp;#39;re probably using ce-dev locally. Valid modes are host, local and discard. ce_dev_delivery_mode: &amp;#34;host&amp;#34; message_size: 10240000 networks: - &amp;#34;[::1]/128&amp;#34; - &amp;#34;[::ffff:127.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/process_manager/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/process_manager/</guid>
      <description>Process Manager Although there is the ansible.builtin.service module for manipulating services, if services do not stop cleanly this can cause problems. This role attempts to first stop and disable a service with the proper module, but if that fails it follows up with pkill and kill -9 commands for any trailing processes, to ensure the service is truly stopped.
Configuration This role expects only the service name as a variable, it has a concept of pluggable operations but for now only the stop operation exists.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/rsyslog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/rsyslog/</guid>
      <description>Rsyslog Configures rsyslog in a client/server topology. Note this doesn&amp;rsquo;t allow for any advanced settings, and will group everything in the main /var/log/syslog file.
Default variables --- rsyslog: listen_port: 514 # Either client or server. role: client # For clients, server name or IP. server: my.server.example.com </description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/solr/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/solr/</guid>
      <description>solr If you need to install SOLR, you can do so by adding geerlingguy.solr to the custom galaxy-requirements.yml file in your config repo (see the ce-provision role) and then importing that same role in your playbook. Because of this we don&amp;rsquo;t set any defaults, but here&amp;rsquo;s an excerpt of the interesting ones.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/ssh_server/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/ssh_server/</guid>
      <description>SSHD Default variables --- sshd: # Main options. Port: - 22 ListenAddress: - &amp;#34;0.0.0.0&amp;#34; - &amp;#34;::&amp;#34; AllowAgentForwarding: &amp;#34;yes&amp;#34; AllowGroups: &amp;#34;&amp;#34; AllowTcpForwarding: &amp;#34;yes&amp;#34; AuthenticationMethods: &amp;#34;&amp;#34; AuthorizedKeysCommand: &amp;#34;&amp;#34; AuthorizedKeysCommandUser: &amp;#34;nobody&amp;#34; ChallengeResponseAuthentication: &amp;#34;no&amp;#34; ClientAliveCountMax: 3 ClientAliveInterval: 60 Compression: &amp;#34;delayed&amp;#34; GatewayPorts: &amp;#34;no&amp;#34; HostKey: [] LoginGraceTime: &amp;#34;2m&amp;#34; LogLevel: &amp;#34;INFO&amp;#34; MaxAuthTries: 6 MaxSessions: 10 PasswordAuthentication: &amp;#34;no&amp;#34; PermitRootLogin: &amp;#34;prohibit-password&amp;#34; PermitTTY: &amp;#34;yes&amp;#34; PermitTunnel: &amp;#34;no&amp;#34; PermitUserEnvironment: &amp;#34;no&amp;#34; PrintLastLog: &amp;#34;yes&amp;#34; PrintMotd: &amp;#34;no&amp;#34; PubkeyAuthentication: &amp;#34;yes&amp;#34; RekeyLimit: &amp;#34;default none&amp;#34; StrictModes: &amp;#34;yes&amp;#34; Subsystem_sftp: &amp;#34;internal-sftp&amp;#34; SyslogFacility: &amp;#34;AUTH&amp;#34; TCPKeepAlive: &amp;#34;yes&amp;#34; UseDNS: &amp;#34;no&amp;#34; UsePAM: &amp;#34;yes&amp;#34; X11DisplayOffset: 10 X11Forwarding: &amp;#34;yes&amp;#34; X11UseLocalhost: &amp;#34;yes&amp;#34; # Define some defaults &amp;#34;special&amp;#34; groups.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/ssl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/ssl/</guid>
      <description>SSL Manages SSL certificates.
If you are using LetsEncrypt for handling it assume standalone mode. If you want to do DNS validation, please do not use this role at this time. There are a few pre-requisites for standalone mode to work:
 You must have firewalls open to allow traffic to ports 80 and/or 443, regardless of your configuration LetsEncrypt&amp;rsquo;s certbot application will try to use port 80, if this will not be possible you can either:  change ssl.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/roles/varnish_config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/roles/varnish_config/</guid>
      <description>varnish-config Installs and configures Varnish, with 6.4 being the default version. Depends on geerlingguy.varnish which does the setup bit, varnish-config handles the default.vcl file.
Default variables --- # Defaults file for varnish_config, other variables exist from importing geerlingguy.varnish and can be overriden varnish_config: # List of IPs that are allowed to ask for content purge. allowed_purge_IP: [] # Paths that won&amp;#39;t be cached. bypass_cache_paths: install\.php|update\.php|cron\.php # Set this to the actual host you want to force instead of false.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://codeenigma.github.io/ce-provision-docs/1.x/scripts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codeenigma.github.io/ce-provision-docs/1.x/scripts/</guid>
      <description>Usage While you can re-use/fork roles or call playbooks directly from your deployment tool, it is recommended to use the provided wrapper script, as it will take care of setting up the needed environments variables.
Arguments You will need to pass at least the following information:
 &amp;ndash;repo: the git repo containing the codebase to deploy, alongside the deploy playbook to play &amp;ndash;branch: the branch to checkout for the given repo &amp;ndash;playbook: the path to the playbook to play, relative to the root of the repository to deploy  Steps What this will do is:</description>
    </item>
    
  </channel>
</rss>